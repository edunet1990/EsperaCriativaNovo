
<!-- Content Wrapper. Contains page content -->
<div class="content-wrapper" style="margin:0px;">

    <!-- Main content -->
    <section class="content">
        <div class="row">
            <div class="col-md-12">
                <!-- AREA CHART -->
                @Html.Partial("InsightsGraficos")
                <!-- /.box -->

            </div>
            <div class="col-md-12">
                <!-- DONUT CHART -->
                @Html.Partial("ObjetivosGraficos")
                <!-- /.box -->

            </div>

            <!-- /.col (LEFT) -->
            <div class="col-md-12">
                <!-- LINE CHART -->
                @Html.Partial("HabilidadesCriativasGraficos")
                <!-- /.box -->
            </div>
            <!-- /.col (RIGHT) -->
        </div>
        <!-- /.row -->
    </section>
    <!-- /.content -->
</div>
<!-- /.content-wrapper -->
<!-- /.content-wrapper -->
@section Scripts
{
    <script>
        /*insights*/
        var insights = am4core;
        insights.ready(function () {

            // Themes begin
            insights.useTheme(am4themes_kelly);
            insights.useTheme(am4themes_animated);
            // Themes end

            // Create chart instance
            var chartInsights = insights.create("chartdivInsight", am4charts.PieChart);

            // Add data
            chartInsights.data = [{
                "insight": "SIM",
                "quantidade": 501.9
            }, {
                "insight": "NÃO",
                "quantidade": 301.9
            }];

            // Add and configure Series
            var pieSeries = chartInsights.series.push(new am4charts.PieSeries());
            pieSeries.dataFields.value = "quantidade";
            pieSeries.dataFields.category = "insight";
            pieSeries.slices.template.stroke = insights.color("#fff");
            pieSeries.slices.template.strokeWidth = 2;
            pieSeries.slices.template.strokeOpacity = 1;

            // This creates initial animation
            pieSeries.hiddenState.properties.opacity = 1;
            pieSeries.hiddenState.properties.endAngle = -90;
            pieSeries.hiddenState.properties.startAngle = -90;

        }); // insights

        /*Objetivos*/
        var objetivos = am4core;
        objetivos.ready(function () {

            // Themes begin
            objetivos.useTheme(am4themes_animated);
            // Themes end

            // Create chart instance
            var chartObjetivos = objetivos.create("chartdiv", am4charts.XYChart);
            chartObjetivos.scrollbarX = new am4core.Scrollbar();

            // Add data
            chartObjetivos.data = [{
                "habilidade": "O EU, O OUTRO E O NÓS",
                "quantidade": 12
            }, {
                "habilidade": "CORPO, GESTOS E MOVIMENTOS",
                "quantidade": 25
            }, {
                "habilidade": "TRAÇOS, SONS, CORES E FORMAS",
                "quantidade": 56
            }, {
                "habilidade": "ESCUTA, FALA, PENSAMENTO E IMAGINAÇÃO",
                "quantidade": 65
            }, {
                "habilidade": "ESPAÇOS, TEMPOS, QUANTIDADES",
                "quantidade": 45
            }];

            // Create axes
            var categoryAxis = chartObjetivos.xAxes.push(new am4charts.CategoryAxis());
            categoryAxis.dataFields.category = "habilidade";
            categoryAxis.renderer.grid.template.location = 10;
            categoryAxis.renderer.minGridDistance = 30;
            categoryAxis.renderer.labels.template.verticalCenter = "middle";
            categoryAxis.tooltip.disabled = true;
            categoryAxis.renderer.minHeight = 110;

            var valueAxis = chartObjetivos.yAxes.push(new am4charts.ValueAxis());
            valueAxis.renderer.minWidth = 10;

            // Create series
            var series = chartObjetivos.series.push(new am4charts.ColumnSeries());
            series.sequencedInterpolation = true;
            series.dataFields.valueY = "quantidade";
            series.dataFields.categoryX = "habilidade";
            series.tooltipText = "[{categoryX}: bold]{valueY}[/]";
            series.columns.template.strokeWidth = 0;

            series.tooltip.pointerOrientation = "vertical";

            series.columns.template.column.cornerRadiusTopLeft = 10;
            series.columns.template.column.cornerRadiusTopRight = 10;
            series.columns.template.column.fillOpacity = 0.8;

            // on hover, make corner radiuses bigger
            var hoverState = series.columns.template.column.states.create("hover");
            hoverState.properties.cornerRadiusTopLeft = 0;
            hoverState.properties.cornerRadiusTopRight = 0;
            hoverState.properties.fillOpacity = 1;

            series.columns.template.adapter.add("fill", function (fill, target) {
                return chartObjetivos.colors.getIndex(target.dataItem.index);
            });

            // Cursor
            chartObjetivos.cursor = new am4charts.XYCursor();

        }); // Objetivos

        /*Habilidades*/
        var habilidades = am4core;
        habilidades.ready(function () {

            // Themes begin
            habilidades.useTheme(am4themes_kelly);
            habilidades.useTheme(am4themes_animated);
            // Themes end



            // Create chart instance
            var chartHabilidades = habilidades.create("chartdivhabilidades", am4charts.RadarChart);

            // Add data
            chartHabilidades.data = [{
                "category": "EMERGENTE",
                "value": 80,
                "full": 100
            }, {
                "category": "ESPONTÂNEA",
                "value": 35,
                "full": 100
            }, {
                "category": "SIGNIFICATIVA",
                "value": 92,
                "full": 100
            }, {
                "category": "PROJETADA",
                "value": 68,
                "full": 100
            }];

            // Make chart not full circle
            chartHabilidades.startAngle = -90;
            chartHabilidades.endAngle = 180;
            chartHabilidades.innerRadius = habilidades.percent(20);

            // Set number format
            chartHabilidades.numberFormatter.numberFormat = "#.#'%'";

            // Create axes
            var categoryAxis = chartHabilidades.yAxes.push(new am4charts.CategoryAxis());
            categoryAxis.dataFields.category = "category";
            categoryAxis.renderer.grid.template.location = 0;
            categoryAxis.renderer.grid.template.strokeOpacity = 0;
            categoryAxis.renderer.labels.template.horizontalCenter = "right";
            categoryAxis.renderer.labels.template.fontWeight = 500;
            categoryAxis.renderer.labels.template.adapter.add("fill", function (fill, target) {
                return (target.dataItem.index >= 0) ? chartHabilidades.colors.getIndex(target.dataItem.index) : fill;
            });
            categoryAxis.renderer.minGridDistance = 10;

            var valueAxis = chartHabilidades.xAxes.push(new am4charts.ValueAxis());
            valueAxis.renderer.grid.template.strokeOpacity = 0;
            valueAxis.min = 0;
            valueAxis.max = 100;
            valueAxis.strictMinMax = true;

            // Create series
            var series1 = chartHabilidades.series.push(new am4charts.RadarColumnSeries());
            series1.dataFields.valueX = "full";
            series1.dataFields.categoryY = "category";
            series1.clustered = false;
            series1.columns.template.fill = new am4core.InterfaceColorSet().getFor("alternativeBackground");
            series1.columns.template.fillOpacity = 0.08;
            series1.columns.template.cornerRadiusTopLeft = 20;
            series1.columns.template.strokeWidth = 0;
            series1.columns.template.radarColumn.cornerRadius = 20;

            var series2 = chartHabilidades.series.push(new am4charts.RadarColumnSeries());
            series2.dataFields.valueX = "value";
            series2.dataFields.categoryY = "category";
            series2.clustered = false;
            series2.columns.template.strokeWidth = 0;
            series2.columns.template.tooltipText = "{category}: [bold]{value}[/]";
            series2.columns.template.radarColumn.cornerRadius = 20;

            series2.columns.template.adapter.add("fill", function (fill, target) {
                return chartHabilidades.colors.getIndex(target.dataItem.index);
            });

            // Add cursor
            chartHabilidades.cursor = new am4charts.RadarCursor();

        }); // habilidades
    </script>
}

